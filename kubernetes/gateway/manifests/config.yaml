apiVersion: v1
kind: Namespace
metadata:
  name: gateway
---
apiVersion: v1
data:
  nginx.conf.template: |-
    # worker_processes  auto;
    error_log  /dev/stderr error;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      client_max_body_size  4M;

      proxy_read_timeout    600;
      proxy_send_timeout    600;
      proxy_connect_timeout 600;

      proxy_http_version    1.1;

      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';

      map $status $loggable {
        ~^[23]  0;
        default 1;
      }

      access_log   /dev/stderr  main if=$loggable;

      sendfile     on;
      tcp_nopush   on;

      resolver kube-dns.kube-system.svc.cluster.local;

      map $http_x_scope_orgid $ensured_x_scope_orgid {
        default $http_x_scope_orgid;
        "" "anonymous";
      }

      proxy_set_header X-Scope-OrgID $ensured_x_scope_orgid;

      include /etc/nginx/gateway_*.conf;
    }
kind: ConfigMap
metadata:
  name: nginx-conf-mfdm49kc72
  namespace: gateway
---
apiVersion: v1
data:
  default-env.envsh: |-
    #!/usr/bin/env sh

    set -eu

    export MIMIR_DISTRIBUTOR_HOST=${MIMIR_DISTRIBUTOR_HOST:-mimir.galah-monitoring.svc.cluster.local}
    export MIMIR_QUERY_FRONTEND_HOST=${MIMIR_QUERY_FRONTEND_HOST:-mimir.galah-monitoring.svc.cluster.local}
    export MIMIR_ALERT_MANAGER_HOST=${MIMIR_ALERT_MANAGER_HOST:-mimir.galah-monitoring.svc.cluster.local}
    export MIMIR_RULER_HOST=${MIMIR_RULER_HOST:-mimir.galah-monitoring.svc.cluster.local}
    export MIMIR_COMPACTOR_HOST=${MIMIR_COMPACTOR_HOST:-mimir.galah-monitoring.svc.cluster.local}


    export LOKI_DISTRIBUTOR_HOST=${LOKI_DISTRIBUTOR_HOST:-loki.galah-logging.svc.cluster.local}
    export LOKI_INGESTER_HOST=${LOKI_INGESTER_HOST:-loki.galah-logging.svc.cluster.local}
    export LOKI_RULER_HOST=${LOKI_RULER_HOST:-loki.galah-logging.svc.cluster.local}
    export LOKI_COMPACTOR_HOST=${LOKI_COMPACTOR_HOST:-loki.galah-logging.svc.cluster.local}
    export LOKI_QUERY_FRONTEND_HOST=${LOKI_QUERY_FRONTEND_HOST:-loki.galah-logging.svc.cluster.local}

    export TEMPO_DISTRIBUTOR_HOST=${TEMPO_DISTRIBUTOR_HOST:-tempo.galah-tracing.svc.cluster.local}
    export TEMPO_INGESTER_HOST=${TEMPO_INGESTER_HOST:-tempo.galah-tracing.svc.cluster.local}
    export TEMPO_QUERY_FRONTEND_HOST=${TEMPO_QUERY_FRONTEND_HOST:-tempo.galah-tracing.svc.cluster.local}
    export TEMPO_COMPACTOR_HOST=${TEMPO_COMPACTOR_HOST:-tempo.galah-tracing.svc.cluster.local}

    export NGINX_ENVSUBST_OUTPUT_DIR=${NGINX_ENVSUBST_OUTPUT_DIR:-/etc/nginx}

    env
  env-templates.sh: |
    #!/bin/sh

    set -e

    ME=$(basename "$0")

    entrypoint_log() {
        if [ -z "${NGINX_ENTRYPOINT_QUIET_LOGS:-}" ]; then
            echo "$@"
        fi
    }

    add_stream_block() {
      local conffile="/etc/nginx/nginx.conf"

      if grep -q -E "\s*stream\s*\{" "$conffile"; then
        entrypoint_log "$ME: $conffile contains a stream block; include $stream_output_dir/*.conf to enable stream templates"
      else
        # check if the file can be modified, e.g. not on a r/o filesystem
        touch "$conffile" 2>/dev/null || { entrypoint_log "$ME: info: can not modify $conffile (read-only file system?)"; exit 0; }
        entrypoint_log "$ME: Appending stream block to $conffile to include $stream_output_dir/*.conf"
        cat << END >> "$conffile"
    # added by "$ME" on "$(date)"
    stream {
      include $stream_output_dir/*.conf;
    }
    END
      fi
    }

    auto_envsubst() {
      local template_dir="${NGINX_ENVSUBST_TEMPLATE_DIR:-/etc/nginx/templates}"
      local suffix="${NGINX_ENVSUBST_TEMPLATE_SUFFIX:-.template}"
      local output_dir="${NGINX_ENVSUBST_OUTPUT_DIR:-/etc/nginx/conf.d}"
      local stream_suffix="${NGINX_ENVSUBST_STREAM_TEMPLATE_SUFFIX:-.stream-template}"
      local stream_output_dir="${NGINX_ENVSUBST_STREAM_OUTPUT_DIR:-/etc/nginx/stream-conf.d}"
      local filter="${NGINX_ENVSUBST_FILTER:-}"

      local template defined_envs relative_path output_path subdir
      defined_envs=$(printf '${%s} ' $(awk "END { for (name in ENVIRON) { print ( name ~ /${filter}/ ) ? name : \"\" } }" < /dev/null ))
      [ -d "$template_dir" ] || return 0
      if [ ! -w "$output_dir" ]; then
        entrypoint_log "$ME: ERROR: $template_dir exists, but $output_dir is not writable"
        return 0
      fi
      find "$template_dir" -follow -type f -name "*$suffix" -print | while read -r template; do
        relative_path="${template#"$template_dir/"}"
        output_path="$output_dir/${relative_path%"$suffix"}"
        subdir=$(dirname "$relative_path")
        # create a subdirectory where the template file exists
        mkdir -p "$output_dir/$subdir"
        entrypoint_log "$ME: Running envsubst on $template to $output_path"
        envsubst "$defined_envs" < "$template" > "$output_path"
      done

      # Print the first file with the stream suffix, this will be false if there are none
      if test -n "$(find "$template_dir" -name "*$stream_suffix" -print -quit)"; then
        mkdir -p "$stream_output_dir"
        if [ ! -w "$stream_output_dir" ]; then
          entrypoint_log "$ME: ERROR: $template_dir exists, but $stream_output_dir is not writable"
          return 0
        fi
        add_stream_block
        find "$template_dir" -follow -type f -name "*$stream_suffix" -print | while read -r template; do
          relative_path="${template#"$template_dir/"}"
          output_path="$stream_output_dir/${relative_path%"$stream_suffix"}"
          subdir=$(dirname "$relative_path")
          # create a subdirectory where the template file exists
          mkdir -p "$stream_output_dir/$subdir"
          entrypoint_log "$ME: Running envsubst on $template to $output_path"
          envsubst "$defined_envs" < "$template" > "$output_path"
        done
      fi
    }

    auto_envsubst
  listen-ipv6.sh: |-
    #!/bin/sh

    set -e

    entrypoint_log() {
        if [ -z "${NGINX_ENTRYPOINT_QUIET_LOGS:-}" ]; then
            echo "$@"
        fi
    }

    ME=$(basename "$0")
    DEFAULT_CONF_FILE="etc/nginx/conf.d/default.conf"

    # check if we have ipv6 available
    if [ ! -f "/proc/net/if_inet6" ]; then
        entrypoint_log "$ME: info: ipv6 not available"
        exit 0
    fi

    if [ ! -f "/$DEFAULT_CONF_FILE" ]; then
        entrypoint_log "$ME: info: /$DEFAULT_CONF_FILE is not a file or does not exist"
        exit 0
    fi

    # check if the file can be modified, e.g. not on a r/o filesystem
    touch /$DEFAULT_CONF_FILE 2>/dev/null || { entrypoint_log "$ME: info: can not modify /$DEFAULT_CONF_FILE (read-only file system?)"; exit 0; }

    # check if the file is already modified, e.g. on a container restart
    grep -q "listen  \[::]\:80;" /$DEFAULT_CONF_FILE && { entrypoint_log "$ME: info: IPv6 listen already enabled"; exit 0; }

    if [ -f "/etc/os-release" ]; then
        . /etc/os-release
    else
        entrypoint_log "$ME: info: can not guess the operating system"
        exit 0
    fi

    entrypoint_log "$ME: info: Getting the checksum of /$DEFAULT_CONF_FILE"

    case "$ID" in
        "debian")
            CHECKSUM=$(dpkg-query --show --showformat='${Conffiles}\n' nginx | grep $DEFAULT_CONF_FILE | cut -d' ' -f 3)
            echo "$CHECKSUM  /$DEFAULT_CONF_FILE" | md5sum -c - >/dev/null 2>&1 || {
                entrypoint_log "$ME: info: /$DEFAULT_CONF_FILE differs from the packaged version"
                exit 0
            }
            ;;
        "alpine")
            CHECKSUM=$(apk manifest nginx 2>/dev/null| grep $DEFAULT_CONF_FILE | cut -d' ' -f 1 | cut -d ':' -f 2)
            echo "$CHECKSUM  /$DEFAULT_CONF_FILE" | sha1sum -c - >/dev/null 2>&1 || {
                entrypoint_log "$ME: info: /$DEFAULT_CONF_FILE differs from the packaged version"
                exit 0
            }
            ;;
        *)
            entrypoint_log "$ME: info: Unsupported distribution"
            exit 0
            ;;
    esac

    # enable ipv6 on default.conf listen sockets
    sed -i -E 's,listen       80;,listen       80;\n    listen  [::]:80;,' /$DEFAULT_CONF_FILE

    entrypoint_log "$ME: info: Enabled listen on IPv6 in /$DEFAULT_CONF_FILE"

    exit 0
  local-resolvers.sh: |-
    #!/bin/sh

    set -eu

    LC_ALL=C
    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    [ "${NGINX_ENTRYPOINT_LOCAL_RESOLVERS:-}" ] || return 0

    NGINX_LOCAL_RESOLVERS=$(awk 'BEGIN{ORS=" "} $1=="nameserver" {if ($2 ~ ":") {print "["$2"]"} else {print $2}}' /etc/resolv.conf)
    export NGINX_LOCAL_RESOLVERS
kind: ConfigMap
metadata:
  name: nginx-entry-scripts
  namespace: gateway
---
apiVersion: v1
data:
  gateway_loki.conf.template: |-
    server {
        listen 3100;
        listen [::]:3100;

        location = / {
            return 200 'OK';
            auth_basic off;
            access_log off;
        }




        # Distributor
        location = /api/prom/push {
            proxy_pass http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }
        location = /loki/api/v1/push {
            proxy_pass http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }

        location = /otlp/v1/logs {
          proxy_pass      http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }

        # Ruler
        location = /ruler/ring {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /api/prom/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /api/prom/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /prometheus/api/v1/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /prometheus/api/v1/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }




        # Ingester
        location ^~ /ingester/ {
          proxy_pass      http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }
        location = /ingester {
          internal;
        }


        # Memberlist
        location = /memberlist {
            proxy_pass http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }

        # Ring
        location = /ring {
          proxy_pass http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }


        # Config
        location = /config {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }



       # Query Front End
        location ~ /loki/api/v1.* {
            proxy_pass http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
        }


        location ~ /api/prom/.* {
          proxy_pass      http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
        }
    }
kind: ConfigMap
metadata:
  name: nginx-loki-template
  namespace: gateway
---
apiVersion: v1
data:
  gateway_mimir.conf.template: |-
    server {
        listen 9090;
        listen [::]:9090;

        location = / {
            return 200 'OK';
            auth_basic off;
            access_log off;
        }

        location /distributor {
          proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:9090$request_uri;
        }
        location = /api/v1/push {
          proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:9090$request_uri;
        }
        location /otlp/v1/metrics {
          proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:9090$request_uri;
        }


        # Alertmanager endpoints
        location /alertmanager {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /multitenant_alertmanager/status {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/alerts {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/config {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/state {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/receivers {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/templates/test {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }

        location /prometheus/api/v1/alerts {
          proxy_pass      http://${MIMIR_RULER_HOST}:9090$request_uri;
        }

        location = /api/v2/alerts {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }

        # Ruler
        location /prometheus/config/v1/rules {
          proxy_pass      http://${MIMIR_RULER_HOST}:9090$request_uri;
        }
        location /prometheus/api/v1/rules {
          proxy_pass      http://${MIMIR_RULER_HOST}:9090$request_uri;
        }


        # Query Front End
        # ToDo: Set to prom prefix env var
        location /prom {
            proxy_pass http://${MIMIR_QUERY_FRONTEND_HOST}:9090$request_uri;
        }

        location /prometheus {
            proxy_pass http://${MIMIR_QUERY_FRONTEND_HOST}:9090$request_uri;
        }

        location = /api/v1/status/buildinfo {
          proxy_pass      http://${MIMIR_QUERY_FRONTEND_HOST}:9090$request_uri;
        }

        # Compactor
        location /api/v1/upload/block/ {
          proxy_pass      http://${MIMIR_COMPACTOR_HOST}:9090$request_uri;
        }

        location ~ /api/v1/.* {
          proxy_pass      http://${MIMIR_COMPACTOR_HOST}:9090$request_uri;
        }



    }
kind: ConfigMap
metadata:
  name: nginx-mimir-template
  namespace: gateway
---
apiVersion: v1
data:
  gateway_tempo.conf.template: |-
    upstream grpc_tempo {
        server ${TEMPO_DISTRIBUTOR_HOST}:3205;
    }

    server {
        listen 3205;
        http2 on;

        location / {
            grpc_set_header X-Scope-OrgID $ensured_x_scope_orgid;
            grpc_pass grpc://grpc_tempo;
        }
    }


    upstream grpc_otlp_tempo {
        server ${TEMPO_DISTRIBUTOR_HOST}:4317;
    }
    server {
        listen 4317;
        http2 on;

        location / {
          grpc_set_header X-Scope-OrgID $ensured_x_scope_orgid;
          grpc_pass grpc://grpc_otlp_tempo;
        }
    }

    upstream http_otlp_tempo {
        server ${TEMPO_DISTRIBUTOR_HOST}:4318;
    }
    server {
        listen 4318;

        location / {
          proxy_set_header X-Scope-OrgID $ensured_x_scope_orgid;
          proxy_pass http://http_otlp_tempo;
        }
    }

    server {
        listen 3200;
        listen [::]:3200;

        location = / {
            return 200 'OK';
            auth_basic off;
            access_log off;
        }

        # Query Front End
    #     location ~ /api/traces/.* {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #     location ~ /api/search/.* {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #
    #     location ~ /api/v2/.* {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #
    #     location = /api/echo {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #
    #     location = /api/overrides {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }

        location ^~ /api {
          proxy_pass      http://${TEMPO_QUERY_FRONTEND_HOST}:3200$request_uri;
        }

        location = /status {
            proxy_pass http://${TEMPO_QUERY_FRONTEND_HOST}:3200$request_uri;
        }

        location = /api/status/buildinfo {
            proxy_pass http://${TEMPO_QUERY_FRONTEND_HOST}:3200$request_uri;
        }


        # Distributor


    #     location = /v1/traces {
    #       proxy_pass      http://${TEMPO_DISTRIBUTOR_HOST}:3205/v1/traces;
    #     }
    #     location = /otlp/v1/traces {
    #       proxy_pass      http://${TEMPO_DISTRIBUTOR_HOST}:3205/v1/traces;
    #     }

        location = /distributor/ring {
          proxy_pass      http://${TEMPO_DISTRIBUTOR_HOST}:3200$request_uri;
        }

        # Ingester


        location = /ingester/ring {
            proxy_pass http://${TEMPO_INGESTER_HOST}:3200$request_uri;
        }

        location = /memberlist {
            proxy_pass http://${TEMPO_INGESTER_HOST}:3200$request_uri;
        }


        # Compactor

        location = /compactor/ring {
          proxy_pass      http://${TEMPO_COMPACTOR_HOST}:3200$request_uri;
        }


    }
kind: ConfigMap
metadata:
  name: nginx-tempo-template
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: gateway
spec:
  ports:
  - name: http-mimir
    port: 9090
  - name: http-loki
    port: 3100
  - name: http-tempo
    port: 3200
  - name: grpc-tempo
    port: 3205
  - name: grpc-otlp-tempo
    port: 4317
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: nginx-env
            optional: true
        image: nginxinc/nginx-unprivileged:1.27-alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 9090
          name: http-mimir
        - containerPort: 3100
          name: http-loki
        - containerPort: 3200
          name: http-tempo
        - containerPort: 3205
          name: grpc-tempo
        - containerPort: 4317
          name: grpc-otlp-tempo
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/nginx/templates
          name: templates
        - mountPath: /docker-entrypoint.d
          name: entry-scripts
      initContainers:
      - command:
        - sh
        - -c
        - cp /configmap/* /docker-entrypoint.d/
        image: registry.k8s.io/busybox
        name: perms
        volumeMounts:
        - mountPath: /configmap
          name: configmap-scripts
        - mountPath: /docker-entrypoint.d
          name: entry-scripts
      terminationGracePeriodSeconds: 60
      volumes:
      - name: templates
        projected:
          sources:
          - configMap:
              name: nginx-conf-mfdm49kc72
          - configMap:
              name: nginx-mimir-template
          - configMap:
              name: nginx-loki-template
          - configMap:
              name: nginx-tempo-template
      - emptyDir: {}
        name: entry-scripts
      - configMap:
          defaultMode: 511
          name: nginx-entry-scripts
        name: configmap-scripts
