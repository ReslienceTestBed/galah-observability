apiVersion: v1
kind: Namespace
metadata:
  name: galah-logging
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki
  namespace: galah-logging
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: canary
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki-canary
  namespace: galah-logging
---
apiVersion: v1
data:
  config.yaml: |2

    auth_enabled: true
    chunk_store_config:
      chunk_cache_config:
        background:
          writeback_buffer: 500000
          writeback_goroutines: 1
          writeback_size_limit: 10MB
        default_validity: 0s
        memcached:
          batch_size: 4
          parallelism: 5
        memcached_client:
          addresses: dnssrvnoa+_memcached-client._tcp.helm-loki-chunks-cache.galah-logging.svc
          consistent_hash: true
          max_idle_conns: 72
          timeout: 2000ms
    common:
      compactor_address: 'http://helm-loki:3100'
      path_prefix: /var/loki
      replication_factor: 1
      storage:
        s3:
          access_key_id: bucket
          bucketnames: loki-chunks
          endpoint: minio.minio-store.svc.cluster.local:443
          http_config:
            insecure_skip_verify: true
          insecure: false
          s3forcepathstyle: true
          secret_access_key: supersecret
    frontend:
      scheduler_address: ""
      tail_proxy_url: ""
    frontend_worker:
      scheduler_address: ""
    index_gateway:
      mode: simple
    ingester:
      chunk_encoding: snappy
    limits_config:
      max_cache_freshness_per_query: 10m
      query_timeout: 300s
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
      volume_enabled: true
    memberlist:
      join_members:
      - loki-memberlist
    pattern_ingester:
      enabled: false
    querier:
      max_concurrent: 2
    query_range:
      align_queries_with_step: true
      cache_results: true
      results_cache:
        cache:
          background:
            writeback_buffer: 500000
            writeback_goroutines: 1
            writeback_size_limit: 500MB
          default_validity: 12h
          memcached_client:
            addresses: dnssrvnoa+_memcached-client._tcp.helm-loki-results-cache.galah-logging.svc
            consistent_hash: true
            timeout: 500ms
            update_interval: 1m
    ruler:
      storage:
        s3:
          access_key_id: bucket
          bucketnames: loki-ruler
          endpoint: minio.minio-store.svc.cluster.local:443
          http_config:
            insecure_skip_verify: true
          insecure: false
          s3forcepathstyle: true
          secret_access_key: supersecret
        type: s3
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    schema_config:
      configs:
      - from: "2024-04-01"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v13
        store: tsdb
    server:
      grpc_listen_port: 3205
      http_listen_port: 3100
      http_server_read_timeout: 600s
      http_server_write_timeout: 600s
    storage_config:
      boltdb_shipper:
        index_gateway_client:
          server_address: ""
      hedging:
        at: 250ms
        max_per_second: 20
        up_to: 3
      tsdb_shipper:
        index_gateway_client:
          server_address: ""
    tracing:
      enabled: true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki
  namespace: galah-logging
---
apiVersion: v1
data:
  runtime-config.yaml: |
    {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki-runtime
  namespace: galah-logging
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: helm-loki
  namespace: galah-logging
spec:
  ports:
  - name: http-metrics
    port: 3100
    protocol: TCP
    targetPort: http-metrics
  - name: grpc
    port: 3205
    protocol: TCP
    targetPort: grpc
  selector:
    app.kubernetes.io/component: single-binary
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: memcached-chunks-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: helm-loki-chunks-cache
  namespace: galah-logging
spec:
  clusterIP: None
  ports:
  - name: memcached-client
    port: 11211
    targetPort: 11211
  - name: http-metrics
    port: 9150
    targetPort: 9150
  selector:
    app.kubernetes.io/component: memcached-chunks-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: memcached-results-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: helm-loki-results-cache
  namespace: galah-logging
spec:
  clusterIP: None
  ports:
  - name: memcached-client
    port: 11211
    targetPort: 11211
  - name: http-metrics
    port: 9150
    targetPort: 9150
  selector:
    app.kubernetes.io/component: memcached-results-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: canary
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki-canary
  namespace: galah-logging
spec:
  ports:
  - name: http-metrics
    port: 3500
    protocol: TCP
    targetPort: http-metrics
  selector:
    app.kubernetes.io/component: canary
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
    prometheus.io/service-monitor: "false"
    variant: headless
  name: loki-headless
  namespace: galah-logging
spec:
  clusterIP: None
  ports:
  - name: http-metrics
    port: 3100
    protocol: TCP
    targetPort: http-metrics
  selector:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki-memberlist
  namespace: galah-logging
spec:
  clusterIP: None
  ports:
  - name: tcp
    port: 7946
    protocol: TCP
    targetPort: http-memberlist
  selector:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: memberlist
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: single-binary
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: helm-loki
  namespace: galah-logging
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: single-binary
      app.kubernetes.io/instance: helm-loki
      app.kubernetes.io/name: loki
  serviceName: helm-loki-headless
  template:
    metadata:
      annotations:
        checksum/config: a6ff00fe509706cd709e81ab962498957a0e7bd3dde91d2c68bd87a087197fb0
        logs.grafana.com/scrape: "true"
      labels:
        app.kubernetes.io/component: single-binary
        app.kubernetes.io/instance: helm-loki
        app.kubernetes.io/name: loki
        app.kubernetes.io/part-of: memberlist
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: single-binary
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -target=all
        env:
        - name: GOMEMLIMIT
          value: 3750MiB
        image: docker.io/grafana/loki:3.1.1
        imagePullPolicy: IfNotPresent
        name: loki
        ports:
        - containerPort: 3100
          name: http-metrics
          protocol: TCP
        - containerPort: 3205
          name: grpc
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 3
            memory: 4Gi
          requests:
            cpu: 2
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /etc/loki/config
          name: config
        - mountPath: /etc/loki/runtime-config
          name: runtime-config
        - mountPath: /var/loki
          name: storage
      enableServiceLinks: true
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmp
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: loki
        name: config
      - configMap:
          name: loki-runtime
        name: runtime-config
  updateStrategy:
    rollingUpdate:
      partition: 0
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: memcached-chunks-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
    name: memcached-chunks-cache
  name: helm-loki-chunks-cache
  namespace: galah-logging
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: memcached-chunks-cache
      app.kubernetes.io/instance: helm-loki
      app.kubernetes.io/name: loki
      name: memcached-chunks-cache
  serviceName: helm-loki-chunks-cache
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: memcached-chunks-cache
        app.kubernetes.io/instance: helm-loki
        app.kubernetes.io/name: loki
        name: memcached-chunks-cache
    spec:
      affinity: {}
      containers:
      - args:
        - -m 8192
        - --extended=modern,track_sizes
        - -I 5m
        - -c 16384
        - -v
        - -u 11211
        env: null
        envFrom: null
        image: memcached:1.6.23-alpine
        imagePullPolicy: IfNotPresent
        name: memcached
        ports:
        - containerPort: 11211
          name: client
        resources:
          limits:
            memory: 9830Mi
          requests:
            cpu: 500m
            memory: 9830Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      - args:
        - --memcached.address=localhost:11211
        - --web.listen-address=0.0.0.0:9150
        image: prom/memcached-exporter:v0.14.2
        imagePullPolicy: IfNotPresent
        name: exporter
        ports:
        - containerPort: 9150
          name: http-metrics
        resources:
          limits: {}
          requests: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: loki
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: memcached-results-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
    name: memcached-results-cache
  name: helm-loki-results-cache
  namespace: galah-logging
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: memcached-results-cache
      app.kubernetes.io/instance: helm-loki
      app.kubernetes.io/name: loki
      name: memcached-results-cache
  serviceName: helm-loki-results-cache
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: memcached-results-cache
        app.kubernetes.io/instance: helm-loki
        app.kubernetes.io/name: loki
        name: memcached-results-cache
    spec:
      affinity: {}
      containers:
      - args:
        - -m 1024
        - --extended=modern,track_sizes
        - -I 5m
        - -c 16384
        - -v
        - -u 11211
        env: null
        envFrom: null
        image: memcached:1.6.23-alpine
        imagePullPolicy: IfNotPresent
        name: memcached
        ports:
        - containerPort: 11211
          name: client
        resources:
          limits:
            memory: 1229Mi
          requests:
            cpu: 500m
            memory: 1229Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      - args:
        - --memcached.address=localhost:11211
        - --web.listen-address=0.0.0.0:9150
        image: prom/memcached-exporter:v0.14.2
        imagePullPolicy: IfNotPresent
        name: exporter
        ports:
        - containerPort: 9150
          name: http-metrics
        resources:
          limits: {}
          requests: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: loki
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: memcached-chunks-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
  name: helm-loki-memcached-chunks-cache
  namespace: galah-logging
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: memcached-chunks-cache
      app.kubernetes.io/instance: helm-loki
      app.kubernetes.io/name: loki
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: memcached-results-cache
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/name: loki
  name: helm-loki-memcached-results-cache
  namespace: galah-logging
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: memcached-results-cache
      app.kubernetes.io/instance: helm-loki
      app.kubernetes.io/name: loki
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: canary
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki-canary
  namespace: galah-logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: canary
      app.kubernetes.io/instance: helm-loki
      app.kubernetes.io/name: loki
  template:
    metadata:
      labels:
        app.kubernetes.io/component: canary
        app.kubernetes.io/instance: helm-loki
        app.kubernetes.io/name: loki
    spec:
      containers:
      - args:
        - -addr=helm-loki.galah-logging.svc.cluster.local.:3100
        - -labelname=pod
        - -labelvalue=$(POD_NAME)
        - -user=self-monitoring
        - -tenant-id=self-monitoring
        - -pass=
        - -push=true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: docker.io/grafana/loki-canary:3.1.1
        imagePullPolicy: IfNotPresent
        name: loki-canary
        ports:
        - containerPort: 3500
          name: http-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /metrics
            port: http-metrics
          initialDelaySeconds: 15
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts: null
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki-canary
      volumes: null
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: helm-loki
  namespace: galah-logging
spec:
  rules:
  - host: loki.example.com
    http:
      paths:
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/push
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/push
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /otlp/v1/logs
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/query
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/label
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/series
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/tail
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/query
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/query_range
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/tail
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/label
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/labels
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/series
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/index/stats
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/index/volume
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/index/volume_range
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/format_query
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/detected_fields
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/detected_labels
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/patterns
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/rules
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/api/v1/rules
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /api/prom/api/v1/alerts
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /loki/api/v1/rules
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /prometheus/api/v1/rules
        pathType: Prefix
      - backend:
          service:
            name: helm-loki
            port:
              number: 3100
        path: /prometheus/api/v1/alerts
        pathType: Prefix
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
  labels:
    app.kubernetes.io/component: helm-test
    app.kubernetes.io/instance: helm-loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: loki-6.10.0
  name: loki-helm-test
  namespace: galah-logging
spec:
  containers:
  - args:
    - -test.v
    env:
    - name: CANARY_SERVICE_ADDRESS
      value: http://loki-canary:3500/metrics
    - name: CANARY_PROMETHEUS_ADDRESS
      value: ""
    - name: CANARY_TEST_TIMEOUT
      value: 1m
    image: docker.io/grafana/loki-helm-test:ewelch-distributed-helm-chart-17db5ee
    name: loki-helm-test
  restartPolicy: Never
