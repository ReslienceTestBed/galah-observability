apiVersion: v1
kind: Namespace
metadata:
  name: gateway
---
apiVersion: v1
data:
  nginx.conf.template: |-
    worker_processes auto;
    error_log /dev/stderr error;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
        worker_connections 2048;
    }

    http {

        map $status $loggable {
        ~^[23]  0;
        default 1;
        }

        access_log   /dev/stderr  main if=$loggable;

        proxy_http_version 1.1;
        sendfile     on;
        tcp_nopush   on;

        proxy_read_timeout    30;
        proxy_send_timeout    30;
        proxy_connect_timeout 30;

        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        resolver kube-dns.kube-system.svc.cluster.local;

        include /etc/nginx/gateway_*.conf;
    }
kind: ConfigMap
metadata:
  name: nginx-conf-dg8g6bk2m4
  namespace: gateway
---
apiVersion: v1
data:
  default-env.envsh: |-
    #!/usr/bin/env sh

    set -eu

    export MIMIR_DISTRIBUTOR_HOST="${MIMIR_DISTRIBUTOR_HOST:-mimir.galah-monitoring.svc.cluster.local}"
    export MIMIR_QUERY_FRONTEND_HOST="${MIMIR_QUERY_FRONTEND_HOST:-mimir.galah-monitoring.svc.cluster.local}"
    export MIMIR_ALERT_MANAGER_HOST="${MIMIR_ALERT_MANAGER_HOST:-mimir.galah-monitoring.svc.cluster.local}"
    export MIMIR_RULER_HOST="${MIMIR_RULER_HOST:-mimir.galah-monitoring.svc.cluster.local}"
    export MIMIR_COMPACTOR_HOST="${MIMIR_COMPACTOR_HOST:-mimir.galah-monitoring.svc.cluster.local}"

    # Default value is Loki in monolithic mode
    export LOKI_DISTRIBUTOR_HOST="${LOKI_DISTRIBUTOR_HOST:-loki.galah-logging.svc.cluster.local}"
    export LOKI_INGESTER_HOST="${LOKI_INGESTER_HOST:-loki.galah-logging.svc.cluster.local}"
    export LOKI_RULER_HOST="${LOKI_RULER_HOST:-loki.galah-logging.svc.cluster.local}"
    export LOKI_COMPACTOR_HOST="${LOKI_COMPACTOR_HOST:-loki.galah-logging.svc.cluster.local}"
    export LOKI_QUERY_FRONTEND_HOST="${LOKI_QUERY_FRONTEND_HOST:-loki.galah-logging.svc.cluster.local}"

    # Default value is tempo in monolithic mode
    export TEMPO_DISTRIBUTOR_HOST="${TEMPO_DISTRIBUTOR_HOST:-tempo.galah-tracing.svc.cluster.local}"
    export TEMPO_INGESTER_HOST="${TEMPO_INGESTER_HOST:-tempo.galah-tracing.svc.cluster.local}"
    export TEMPO_QUERY_FRONTEND_HOST="${TEMPO_QUERY_FRONTEND_HOST:-tempo.galah-tracing.svc.cluster.local}"
    export TEMPO_COMPACTOR_HOST="${TEMPO_COMPACTOR_HOST:-tempo.galah-tracing.svc.cluster.local}"

    export NGINX_ENVSUBST_OUTPUT_DIR="${NGINX_ENVSUBST_OUTPUT_DIR:-/etc/nginx}"

    env
  local-resolvers.sh: |-
    #!/bin/sh

    set -eu

    LC_ALL=C
    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    [ "${NGINX_ENTRYPOINT_LOCAL_RESOLVERS:-}" ] || return 0

    NGINX_LOCAL_RESOLVERS=$(awk 'BEGIN{ORS=" "} $1=="nameserver" {if ($2 ~ ":") {print "["$2"]"} else {print $2}}' /etc/resolv.conf)
    export NGINX_LOCAL_RESOLVERS
kind: ConfigMap
metadata:
  name: nginx-entry-scripts-mgf7btd95g
  namespace: gateway
---
apiVersion: v1
data:
  gateway_loki.conf.template: |-
    server {
        listen 3100;
        listen [::]:3100;

        location = / {
            return 200 'OK';
            auth_basic off;
            access_log off;
        }




        # Distributor
        location = /api/prom/push {
            proxy_pass http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }
        location = /loki/api/v1/push {
            proxy_pass http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }

        location = /otlp/v1/logs {
          proxy_pass      http://${LOKI_DISTRIBUTOR_HOST}:3100$request_uri;
        }

        # Ruler
        location = /ruler/ring {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /api/prom/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /api/prom/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /loki/api/v1/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /prometheus/api/v1/alerts.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }
        location ~ /prometheus/api/v1/rules.* {
          proxy_pass      http://${LOKI_RULER_HOST}:3100$request_uri;
        }




        # Ingester
        location ^~ /ingester/ {
          proxy_pass      http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }
        location = /ingester {
          internal;
        }


        # Memberlist
        location = /memberlist {
            proxy_pass http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }

        # Ring
        location = /ring {
          proxy_pass http://${LOKI_INGESTER_HOST}:3100$request_uri;
        }


        # Config
        location = /config {
          proxy_pass      http://${LOKI_COMPACTOR_HOST}:3100$request_uri;
        }



       # Query Front End
        location ~ /loki/api/v1.* {
            proxy_pass http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
        }


        location ~ /api/prom/.* {
          proxy_pass      http://${LOKI_QUERY_FRONTEND_HOST}:3100$request_uri;
        }
    }
  gateway_mimir.conf.template: |-
    server {
        listen 9090;
        listen [::]:9090;

        location = / {
            return 200 'OK';
            auth_basic off;
            access_log off;
        }

        location /distributor {
          proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:9090$request_uri;
        }
        location = /api/v1/push {
          proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:9090$request_uri;
        }
        location /otlp/v1/metrics {
          proxy_pass      http://${MIMIR_DISTRIBUTOR_HOST}:9090$request_uri;
        }


        # Alertmanager endpoints
        location /alertmanager {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /multitenant_alertmanager/status {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/alerts {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/config {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/state {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/receivers {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }
        location = /api/v1/grafana/templates/test {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }

        location = /api/v2/alerts {
          proxy_pass      http://${MIMIR_ALERT_MANAGER_HOST}:9090$request_uri;
        }

        # Query Front End
        # ToDo: Set to prom prefix env var
        location = /prom {
            proxy_pass http://${MIMIR_QUERY_FRONTEND_HOST}:9090$request_uri;
        }

        location = /prometheus {
            proxy_pass http://${MIMIR_QUERY_FRONTEND_HOST}:9090$request_uri;
        }

        location = /api/v1/status/buildinfo {
          proxy_pass      http://${MIMIR_QUERY_FRONTEND_HOST}:9090$request_uri;
        }

        # Compactor
        location /api/v1/upload/block/ {
          proxy_pass      http://${MIMIR_COMPACTOR_HOST}:9090$request_uri;
        }

    }
  gateway_tempo.conf.template: |-
    # upstream grpc_tempo {
    #     server ${TEMPO_DISTRIBUTOR_HOST}:3205;
    # }

    server {
        listen 3205;
        http2 on;

        location / {
            grpc_pass grpc://grpc_tempo;
        }
    }


    server {
        listen 3200;
        listen [::]:3200;

        location = / {
            return 200 'OK';
            auth_basic off;
            access_log off;
        }

        # Query Front End
    #     location ~ /api/traces/.* {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #     location ~ /api/search/.* {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #
    #     location ~ /api/v2/.* {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #
    #     location = /api/echo {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }
    #
    #     location = /api/overrides {
    #         proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
    #     }

        location ^~ /api {
          proxy_pass      http://${TEMPO_QUERY_FRONTEND_HOST}:3200$request_uri;
        }

        location = /status {
            proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
        }

        location = /api/status/buildinfo {
            proxy_pass http://${TEMPO_FRONTEND_HOST}:3200$request_uri;
        }


        # Distributor


        location = /v1/traces {
          proxy_pass      http://${TEMPO_DISTRIBUTOR_HOST}:3205/v1/traces;
        }
        location = /otlp/v1/traces {
          proxy_pass      http://${TEMPO_DISTRIBUTOR_HOST}:3205/v1/traces;
        }

        location = /distributor/ring {
          proxy_pass      http://${TEMPO_DISTRIBUTOR_HOST}:3200$request_uri;
        }

        # Ingester


        location = /ingester/ring {
            proxy_pass http://${TEMP_INGESTER_HOST}:3200$request_uri;
        }

        location = /memberlist {
            proxy_pass http://${TEMP_INGESTER_HOST}:3200$request_uri;
        }


        # Compactor

        location = /compactor/ring {
          proxy_pass      http://${TEMPO_COMPACTOR_HOST}:3200$request_uri;
        }


    }
kind: ConfigMap
metadata:
  name: nginx-templates
  namespace: gateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: gateway
spec:
  ports:
  - name: http-mimir
    port: 9090
  - name: http-loki
    port: 3100
  - name: http-tempo
    port: 3200
  - name: grpc-tempo
    port: 3205
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: nginx-env
            optional: true
        image: nginxinc/nginx-unprivileged:1.27-alpine
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 9090
          name: http-mimir
        - containerPort: 3100
          name: http-loki
        - containerPort: 3200
          name: http-tempo
        - containerPort: 3205
          name: grpc-tempo
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/nginx/templates
          name: templates
        - mountPath: /docker-entrypoint.d
          name: entry-scripts
      initContainers:
      - command:
        - sh
        - -c
        - cp /configmap/* /docker-entrypoint.d/
        image: registry.k8s.io/busybox
        name: perms
        volumeMounts:
        - mountPath: /configmap
          name: configmap-scripts
        - mountPath: /docker-entrypoint.d
          name: entry-scripts
      terminationGracePeriodSeconds: 60
      volumes:
      - name: templates
        projected:
          sources:
          - configMap:
              name: nginx-conf-dg8g6bk2m4
          - configMap:
              name: nginx-templates
      - emptyDir: {}
        name: entry-scripts
      - configMap:
          defaultMode: 511
          name: nginx-entry-scripts-mgf7btd95g
        name: configmap-scripts
